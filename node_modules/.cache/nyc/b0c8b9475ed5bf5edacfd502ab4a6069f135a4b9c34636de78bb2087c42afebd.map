{"version":3,"sources":["accountTests.js"],"names":["dotenv","config","should","chai","use","chaiHttp","describe","client","firstName","lastName","email","password","type","isAdmin","clientToken","jwt","sign","id","process","env","SECRET","expiresIn","it","done","request","server","post","send","end","response","have","status","body","be","a","property","data","account","accountNumber","createdOn","owner","balance","set","err","error","equal","staff","staffToken","updatedAccount","patch","get"],"mappings":"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","file":"accountTests.js","sourceRoot":"C:/Users/nono.DESKTOP-OPOSFU3/Desktop/andela-banka/server/test/userTests","sourcesContent":["/* eslint-disable no-unused-expressions */\n// eslint-disable-next-line no-unused-expressions\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport server from '../../app';\n\ndotenv.config();\n// eslint-disable-next-line no-unused-vars\nconst should = chai.should();\n\nchai.use(chaiHttp);\n\ndescribe('create account', () => {\n  const client = {\n    firstName: 'chinonso',\n    lastName: 'calix',\n    email: 'igwechinonso@gmail.com',\n    password: 1234,\n    type: 'client',\n    isAdmin: false,\n  };\n  const clientToken = jwt.sign({\n    email: client.email,\n    id: client.id,\n    isAdmin: client.isAdmin,\n    type: client.type,\n  }, process.env.SECRET, { expiresIn: '1h' });\n  it('should be able to signup a user with correct details', (done) => {\n    chai.request(server)\n      .post('/api/v1/auth/signup')\n      .send('x-access-token', clientToken)\n      .send(client)\n      .end((request, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('data');\n        response.body.data.should.have.property('token');\n        response.body.data.should.have.property('firstName');\n        response.body.data.should.have.property('lastName');\n        response.body.data.should.have.property('email');\n        response.body.data.should.have.property('password');\n        response.body.data.should.have.property('type');\n        response.body.data.should.have.property('isAdmin');\n        done();\n      });\n  });\n  const account = {\n    id: 1,\n    accountNumber: '0114276912',\n    createdOn: '12/12/2009',\n    owner: 1,\n    type: 'savings',\n    status: 'active',\n    balance: 50000.32,\n  };\n  it('only a logged in user should be able to create an account', (done) => {\n    chai.request(server)\n      .post('/api/v1/accounts')\n      .send(account)\n      .set('Authorization', `Bearer ${clientToken}`)\n      .end((err, response) => {\n        response.should.have.status(201);\n      });\n    done();\n  });\n\n  it('you should not be able to create account if you are not logged in', (done) => {\n    chai.request(server)\n      .post('/api/v1/accounts')\n      .send(account)\n      .end((err, response) => {\n        response.should.have.status(401);\n        response.body.should.have.property('error');\n        response.body.error.should.equal('Unauthorized');\n      });\n    done();\n  });\n\n  const staff = {\n    firstName: 'chinonso',\n    lastName: 'calix',\n    email: 'staff@gmail.com',\n    password: 1234,\n    type: 'staff',\n    isAdmin: true,\n  };\n  const staffToken = jwt.sign({\n    email: staff.email,\n    id: staff.id,\n    isAdmin: staff.isAdmin,\n    type: staff.type,\n  }, process.env.SECRET, { expiresIn: '1h' });\n  it('should be able to signup a staff with the correct details', (done) => {\n    chai.request(server)\n      .post('/api/v1/auth/signup')\n      .send('x-access-token', staffToken)\n      .send(staff)\n      .end((request, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('data');\n        response.body.data.should.have.property('token');\n        response.body.data.should.have.property('firstName');\n        response.body.data.should.have.property('lastName');\n        response.body.data.should.have.property('email');\n        response.body.data.should.have.property('password');\n        response.body.data.should.have.property('type');\n        response.body.data.should.have.property('isAdmin');\n        done();\n      });\n  });\n  const updatedAccount = {\n    id: 1,\n    accountNumber: '0114276912',\n    createdOn: '12/12/2009',\n    owner: 1,\n    type: 'savings',\n    status: 'dormant',\n    balance: 50000.32,\n  };\n  it('only a staff can update an account', (done) => {\n    chai.request(server)\n      .patch('/api/v1/accounts/0114276912')\n      .send(updatedAccount)\n      .set('Authorization', `Bearer ${staffToken}`)\n      .end((err, response) => {\n        response.should.have.status(200);\n      });\n    done();\n  });\n\n  it('only an a staff should be able to get all accounts', (done) => {\n    chai.request(server)\n      .get('/api/v1/accounts')\n      .set('Authorization', `Bearer ${staffToken}`)\n      .end((err, response) => {\n        response.should.have.status(200);\n      });\n    done();\n  });\n\n  it('only an a staff should be able to get a single account number', (done) => {\n    chai.request(server)\n      .get('/api/v1/accounts/0114276912')\n      .set('Authorization', `Bearer ${staffToken}`)\n      .end((err, response) => {\n        response.should.have.status(200);\n      });\n    done();\n  });\n});\n"]}