{"version":3,"sources":["userTest.js"],"names":["dotenv","config","should","chai","use","chaiHttp","describe","it","equal","user","firstName","lastName","email","password","type","isAdmin","token","jwt","sign","id","process","env","SECRET","expiresIn","done","request","server","post","send","end","response","have","status","body","be","a","property","data"],"mappings":";;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGAA,iBAAOC,MAAP;AACA;AAVA;AACA;AAUA,IAAMC,SAASC,eAAKD,MAAL,EAAf;;AAEAC,eAAKC,GAAL,CAASC,kBAAT;;AAEAC,SAAS,WAAT,EAAsB,YAAM;AAC1BC,KAAG,8CAAH,EAAmD,YAAM;AACtD,SAAD,CAAQL,MAAR,CAAeM,KAAf,CAAqB,KAArB;AACD,GAFD;AAGD,CAJD;;AAMAF,SAAS,yBAAT,EAAoC,YAAM;AACxC,MAAMG,OAAO;AACXC,eAAW,UADA;AAEXC,cAAU,OAFC;AAGXC,WAAO,0BAHI;AAIXC,cAAU,IAJC;AAKXC,UAAM,QALK;AAMXC,aAAS;AANE,GAAb;AAQA,MAAMC,QAAQC,uBAAIC,IAAJ,CAAS;AACrBN,WAAOH,KAAKG,KADS;AAErBO,QAAIV,KAAKU,EAFY;AAGrBJ,aAASN,KAAKM,OAHO;AAIrBD,UAAML,KAAKK;AAJU,GAAT,EAKXM,QAAQC,GAAR,CAAYC,MALD,EAKS,EAAEC,WAAW,IAAb,EALT,CAAd;AAMAhB,KAAG,iCAAH,EAAsC,UAACiB,IAAD,EAAU;AAC9CrB,mBAAKsB,OAAL,CAAaC,aAAb,EACGC,IADH,CACQ,qBADR,EAEGC,IAFH,CAEQ,gBAFR,EAE0BZ,KAF1B,EAGGY,IAHH,CAGQnB,IAHR,EAIGoB,GAJH,CAIO,UAACJ,OAAD,EAAUK,QAAV,EAAuB;AAC1BA,eAAS5B,MAAT,CAAgB6B,IAAhB,CAAqBC,MAArB,CAA4B,GAA5B;AACAF,eAASG,IAAT,CAAc/B,MAAd,CAAqBgC,EAArB,CAAwBC,CAAxB,CAA0B,QAA1B;AACAL,eAASG,IAAT,CAAc/B,MAAd,CAAqB6B,IAArB,CAA0BK,QAA1B,CAAmC,MAAnC;AACAN,eAASG,IAAT,CAAcI,IAAd,CAAmBnC,MAAnB,CAA0B6B,IAA1B,CAA+BK,QAA/B,CAAwC,OAAxC;AACAN,eAASG,IAAT,CAAcI,IAAd,CAAmBnC,MAAnB,CAA0B6B,IAA1B,CAA+BK,QAA/B,CAAwC,WAAxC;AACAZ;AACD,KAXH;AAYD,GAbD;AAcD,CA7BD","file":"userTest.js","sourceRoot":"C:/Users/nono.DESKTOP-OPOSFU3/Desktop/andela-banka/server/test","sourcesContent":["/* eslint-disable no-unused-expressions */\n// eslint-disable-next-line no-unused-expressions\nimport chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport server from '../app';\n\n\ndotenv.config();\n// eslint-disable-next-line no-unused-vars\nconst should = chai.should();\n\nchai.use(chaiHttp);\n\ndescribe('Demo test', () => {\n  it('This is demo test and actually tests nothing', () => {\n    ('one').should.equal('one');\n  });\n});\n\ndescribe('POST api/v1/auth/signup', () => {\n  const user = {\n    firstName: 'chinonso',\n    lastName: 'calix',\n    email: 'igwechinonso77@gmail.com',\n    password: 1234,\n    type: 'client',\n    isAdmin: false,\n  };\n  const token = jwt.sign({\n    email: user.email,\n    id: user.id,\n    isAdmin: user.isAdmin,\n    type: user.type,\n  }, process.env.SECRET, { expiresIn: '1h' });\n  it('should be able to signup a user', (done) => {\n    chai.request(server)\n      .post('/api/v1/auth/signup')\n      .send('x-access-token', token)\n      .send(user)\n      .end((request, response) => {\n        response.should.have.status(201);\n        response.body.should.be.a('object');\n        response.body.should.have.property('data');\n        response.body.data.should.have.property('token');\n        response.body.data.should.have.property('firstName');\n        done();\n      });\n  });\n});\n"]}