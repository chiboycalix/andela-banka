{"version":3,"sources":["isUser.js"],"names":["dotenv","config","request","response","next","token","headers","authorization","split","decoded","jwt","verify","process","env","SECRET","userData","error","status","json"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP;;kBAEe,UAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AAC1C,MAAI;AACF,QAAMC,QAAQH,QAAQI,OAAR,CAAgBC,aAAhB,CAA8BC,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CAAd;AACA,QAAMC,UAAUC,uBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,QAAQC,GAAR,CAAYC,MAA9B,CAAhB;AACAZ,YAAQa,QAAR,GAAmBN,OAAnB;AACAL;AACD,GALD,CAKE,OAAOY,KAAP,EAAc;AACd,WAAOb,SAASc,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAC/BD,cAAQ,GADuB;AAE/BD,aAAO;AAFwB,KAA1B,CAAP;AAID;AACF,C","file":"isUser.js","sourceRoot":"C:/Users/nono.DESKTOP-OPOSFU3/Desktop/andela-banka/server/middlewares","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nexport default (request, response, next) => {\r\n  try {\r\n    const token = request.headers.authorization.split(' ')[1];\r\n    const decoded = jwt.verify(token, process.env.SECRET);\r\n    request.userData = decoded;\r\n    next();\r\n  } catch (error) {\r\n    return response.status(401).json({\r\n      status: 401,\r\n      error: 'Unauthorized',\r\n    });\r\n  }\r\n};\r\n"]}